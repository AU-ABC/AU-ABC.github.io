---
title: "ABC.2: RStudio projects and Anaconda+Python"
author: "Marie SÃ¸nderstrup-Jensen, Samuele Soraggi"
image: ./2024-06-27-ABC2/Anaconda.png
date: 2024-06-27
categories: [R, RStudio, Anaconda, Python, environments]
description: "Things worth remembering from the ABC.2"
eval: true
---


# R Tutorial


# Python Tutorial

We will first install `Anaconda`, which allows you to create environments (isolated group of packages to run a project and ensure reproducibility), and run softwares to code interactively (we will use one called jupyterlab).

## Install Anaconda and create an environment

**1.** Download Anaconda from [the download page](https://www.anaconda.com/download). Uso also the `Sign In` button of the webpage to create an account: this will enable you to use an AI-chat showing up while you code, and which can help you doing a lot of things.

:::{.callout-note}

This guide has been made with Windows, and works similarly with MacOS. For Linux, you will download a file with `.sh` extension, which you can execute in the command line with `bash installer.sh`.

:::

**2.** Once Anaconda is installed, open **Anaconda Navigator**. Log into Anaconda Cloud from the software, and eventually update Anaconda Navigator if asked.

**3.** Your initial window would look similarly as below. What you can see is a suite of softwares. Some of those are installed and they are found in the anaconda **environment** called `base (root)`, as shown in the red circle. It is good advice not to modify the base environment, because Anaconda itself is installed into it!

![](./2024-06-27-ABC2/landing.png)

**4.** We create a new environment with only few needed packages for our tutorial. Click on `Environments` on the toolbar (red circle). You can see the base (root) environment and a long list of packages it contains. Click on `Create` (blue circle).

![](./2024-06-27-ABC2/envlist.png)

**5.** In the appearing window choose a name for the environment and select `Python`. Then click on `Create`. It takes a bit of time to create the environment.

![](./2024-06-27-ABC2/options.png)

**6.** Select the environment. It will load a few packages (just Python and its essential dependencies), but we want to install new ones. Open the filtering menu (green circle above) and choose `All` to view all existing packages. Select the following packages: `pandas`, `numpy`, `jupyterlab`, `anaconda-toolbox` and click `Apply`. A list of dependencies will be shown, and you have to accept that to continue. Wait for the installations to go through.

**7.** Now select the environment again. There are much more packages installed and ready to use. Click on `Home` in the toolbar: you will see the softwares installed in your environment (choose `Installed Application` from the dropdown menu to see only the installed ones).

:::{.callout-note title="wrap up"}

You can create various environments to keep specific versions of packages constant in separate data science projects. This ensures a high degree of reproducibility in your projects.

An environment can include the softwares needed to code (RStudio, jupyterLab are the most famous, but also others can be installed).

We will use the created environment to run some basic commands in python.

:::

